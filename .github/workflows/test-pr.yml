name: WRF-Hydro CI

on:
  pull_request:
    branches: [ master, v5.2.x ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      pr:
        description: "PR to test"
        required: true

jobs:
  Python_Plotting:
    runs-on: ubuntu-latest
    steps:
      - name: Find Path
        run: pwd
      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install matplotlib
      - name: Create Python Plot
        run: |
          python3 -c "import matplotlib.pyplot as plt; plt.plot([2,3,5,7,11,13,17]); plt.savefig('foo.png')"
          cp foo.png ${HOME}

      - name: Change to home directory
        run: cd ${HOME}

      - name: Clone WRF-Hydro CI Data Repo
        uses: actions/checkout@main
        with:
          repository: scrasmussen/wrf_hydro_nwm_ci_data
          # path: ${HOME}
      - name: Change to WRF-Hydro CI Data Repo Directory
        run: |
          cd ${GITHUB_WORKSPACE}
          pwd
          ls
          cd wrf_hydro_nwm_ci_data
      - name: Add plot to CI Data Repo
        run: |
          export CI_OUTPUT_DIR=$(date +"%y%m%d%H%M%S")
          mkdir $CI_OUTPUT_DIR
          cd $CI_OUTPUT_DIR
          cp $HOME/foo.png .
          git add foo.png
          git commit foo.png -m "Test foo image"
          git push
      - name: Push Plot to PR
        uses: thollander/actions-comment-pull-request@v1
        with:
          message: |
            "foo comparison and the upload is at foo.png"
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}


  # Model_Testing:
  #   strategy:
  #     fail-fast: false
  #     matrix:
  #       configuration: [nwm_ana, nwm_long_range, gridded, reach]
  #   runs-on: ubuntu-latest

  #   steps:
  #     - name: Checkout candidate (pull request / push)
  #       if: ${{ github.event_name == 'pull_request' || github.event_name == 'push' }}
  #       uses: actions/checkout@v2
  #       with:
  #         path: candidate

  #     - name: Checkout candidate (manual)
  #       if: ${{ github.event_name == 'workflow_dispatch' }}
  #       env:
  #         GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
  #       run: gh repo clone ${{ github.repository }} candidate && cd candidate && gh pr checkout -R ${{ github.repository }} ${{ github.event.inputs.pr }}

  #     - name: Checkout reference (pull request)
  #       if: ${{ github.event_name == 'pull_request' }}
  #       uses: actions/checkout@v2
  #       with:
  #         ref: ${{ github.event.pull_request.base.ref }}
  #         path: reference

  #     - name: Checkout reference (push)
  #       if: ${{ github.event_name == 'push' }}
  #       uses: actions/checkout@v2
  #       with:
  #         ref: ${{ github.event.before }}
  #         path: reference

  #     - name: Checkout reference (manual)
  #       if: ${{ github.event_name == 'workflow_dispatch' }}
  #       env:
  #         GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
  #       run: gh repo clone ${{ github.repository }} reference && cd reference && git checkout origin/$(gh pr view ${{ github.event.inputs.pr }} --json baseRefName --jq '.baseRefName')

  #     - name: Run testing container
  #       run: |
  #         docker run -e TRAVIS=1 -t --name test_container \
  #          -v $GITHUB_WORKSPACE/candidate:/home/docker/candidate \
  #          -v $GITHUB_WORKSPACE/reference:/home/docker/reference \
  #          wrfhydro/dev:modeltesting --config ${{ matrix.configuration }} --domain_tag dev

  #     - name: Copy test results from container
  #       if: ${{ always() }}
  #       run: docker cp test_container:/home/docker/test_out $GITHUB_WORKSPACE/test_report

  #     - name: Archive test results to GitHub
  #       if: ${{ always() }}
  #       uses: actions/upload-artifact@v2
  #       with:
  #         name: test-reports
  #         path: ${{ github.workspace }}/test_report/**.html
